{"version":3,"sources":["assets/logo.png","components/searchBox.js","containers/home.js","components/productCard.js","containers/products.js","containers/productDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBox","className","src","logo","alt","action","method","role","type","aria-label","name","placeholder","maxLength","autoFocus","autoCapitalize","autoCorrect","spellCheck","autoComplete","Home","ProductCard","products","App","path","component","exact","Products","ProductDetail","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,kMC6B5BC,MA3Bf,WACE,OACE,gCACE,yBAAKC,UAAU,iBACb,yBAAKC,IAAKC,IAAMC,IAAI,wBACpB,0BAAMC,OAAO,gBAAgBC,OAAO,MAAMC,KAAK,UAC7C,2BACEC,KAAK,OACLC,aAAW,sCACXC,KAAK,SACLC,YAAY,0CACZC,UAAU,MACVC,UAAU,GACVC,eAAe,MACfC,YAAY,MACZC,WAAW,QACXC,aAAa,QAEf,4BAAQT,KAAK,SAASP,UAAU,cAC9B,uBAAGA,UAAU,sBCfViB,MAJf,WACE,OAAO,+BCoBMC,MAtBf,WACE,OACE,yBAAKlB,UAAU,eACb,yBAAKA,UAAU,SACb,yBACEC,IAAI,+HACJE,IAAI,iBAGR,yBAAKH,UAAU,UACb,wBAAIA,UAAU,SAAd,SACA,yBAAKA,UAAU,eACb,uGAGJ,yBAAKA,UAAU,YACb,oDCAOmB,MAdf,WACE,OACE,yBAAKnB,UAAU,QACb,0CACA,6BAASA,UAAU,WACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCLOoB,MAJf,WACE,OAAO,+C,MCkBMA,MAbf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKpB,UAAU,QACb,kBAAC,IAAD,CAAOqB,KAAK,IAAIC,UAAWL,EAAMM,OAAK,IACtC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWE,EAAUD,OAAK,IAC/C,kBAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWG,EAAeF,OAAK,OCH5CG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.8140e438.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.62f220d7.png\";","import React from \"react\";\nimport logo from \"../assets/logo.png\";\nfunction SearchBox() {\n  return (\n    <header>\n      <div className=\"container row\">\n        <img src={logo} alt=\"Examen Mercadolibre\" />\n        <form action=\"/items?search\" method=\"GET\" role=\"search\">\n          <input\n            type=\"text\"\n            aria-label=\"Ingresá lo que quieras encontrar\"\n            name=\"search\"\n            placeholder=\"Buscar productos, marcas y más…\"\n            maxLength=\"120\"\n            autoFocus=\"\"\n            autoCapitalize=\"off\"\n            autoCorrect=\"off\"\n            spellCheck=\"false\"\n            autoComplete=\"off\"\n          />\n          <button type=\"submit\" className=\"search-btn\">\n            <i className=\"fa fa-search\" />\n          </button>\n        </form>\n      </div>\n    </header>\n  );\n}\n\nexport default SearchBox;\n","import React from \"react\";\n\nfunction Home() {\n  return <div />;\n}\n\nexport default Home;\n","import React from \"react\";\nfunction ProductCard() {\n  return (\n    <div className=\"product row\">\n      <div className=\"image\">\n        <img\n          src=\"https://http2.mlstatic.com/libro-diseno-de-estructuras-metalicas-metodo-asd-4-ed-D_NQ_NP_612305-MLA20850078257_082016-V.webp\"\n          alt=\"product-alt\"\n        />\n      </div>\n      <div className=\"detail\">\n        <h2 className=\"price\">$1540</h2>\n        <div className=\"description\">\n          <span>Libro Diseño De Estructuras Metálicas Método Asd 4ª Ed.</span>\n        </div>\n      </div>\n      <div className=\"location\">\n        <span>Capital Federal</span>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductCard;\n","import React from \"react\";\nimport ProductCard from \"../components/productCard\";\n\nfunction products() {\n  return (\n    <div className=\"main\">\n      <h1>breadcrumb</h1>\n      <section className=\"results\">\n        <ProductCard />\n        <ProductCard />\n        <ProductCard />\n        <ProductCard />\n      </section>\n    </div>\n  );\n}\n\nexport default products;\n","import React from \"react\";\n\nfunction App() {\n  return <h1>product detail</h1>;\n}\n\nexport default App;\n","import React from \"react\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport SearchBox from \"./components/searchBox\";\nimport Home from \"./containers/home\";\nimport Products from \"./containers/products\";\nimport ProductDetail from \"./containers/productDetail\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Router>\n      <SearchBox />\n      <div className=\"main\">\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/items\" component={Products} exact />\n        <Route path=\"/items/:id\" component={ProductDetail} exact />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}